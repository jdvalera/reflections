When would you want to use a remote repository rather than keeping all your work local?

I would use a remote repository if I want to access my work in multiple areas with multiple devices. It is also backed up remotely just in case anything happens to my local repository.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

You might not want to update any changes made from your remote repository to your local repository.


Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks: Clones a repository on GitHub to another repository. It can easily be traced back to the original owner.
Clones: Clones a repository either from GitHub to a local directory or from a local directory to another local directory.
Branches: Create a new branch of commits independent of another branch unless merged.


What is the benefit of having a copy of the last known state of the remote stored locally?

It lets you compare your local repository with the remote repository that you pulled or cloned.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

We would all have to make different manual versions of our program and somehow compare our changes to each other's code. This would be harder than comparing through git and merging with git. We can also do this remotely easily.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You do not want to possibly break already working code while updating a feature of the program. It also allows you to make a pull request on GitHub so that your collaborators can review your changes without it changing the master. Making a change directly to master is faster and more convenient but you can possibly break the program and when you push the new commit no one else can review the code before it gets merged.